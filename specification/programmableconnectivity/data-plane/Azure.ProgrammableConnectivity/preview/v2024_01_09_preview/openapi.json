{
  "swagger": "2.0",
  "info": {
    "title": "Programmable Connectivity",
    "version": "v2024_01_09_preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "x-ms-parameterized-host": {
    "hostTemplate": "{endpoint}",
    "useSchemePrefix": false,
    "parameters": [
      {
        "name": "endpoint",
        "in": "path",
        "description": "An Azure Programmable Connectivity Endpoint providing access to Network APIs, for example https://{region}.apcgatewayapi.azure.com",
        "required": true,
        "type": "string"
      }
    ]
  },
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "security": [
    {
      "OAuth2Auth": [
        "https://management.azure.com//.default"
      ]
    }
  ],
  "securityDefinitions": {
    "OAuth2Auth": {
      "type": "oauth2",
      "flow": "implicit",
      "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
      "scopes": {
        "https://management.azure.com//.default": ""
      }
    }
  },
  "tags": [],
  "paths": {
    "/device-location/{location}:verify": {
      "post": {
        "operationId": "DeviceLocation_Verify",
        "description": "Verifies whether a device is within a specified location area, defined as an accuracy (radius) around a point, specified by longitude and latitude.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "location",
            "in": "path",
            "description": "Static endpoint",
            "required": true,
            "type": "string",
            "enum": [
              "location"
            ],
            "x-ms-enum": {
              "name": "DeviceLocationEnum",
              "modelAsString": true,
              "values": [
                {
                  "name": "location",
                  "value": "location",
                  "description": "Static endpoint"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "$ref": "#/parameters/ApcGatewayIdHeader"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceLocationVerificationContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/DeviceLocationVerificationResult"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApcError"
            }
          }
        },
        "x-ms-examples": {
          "DeviceLocation_Verify": {
            "$ref": "./examples/DeviceLocation_Verify_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/device-network/{network}:retrieve": {
      "post": {
        "operationId": "DeviceNetwork_Retrieve",
        "description": "Retrieves the network a given device is on. Returns network in a networkCode format that can be used for other APIs.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "network",
            "in": "path",
            "description": "Static endpoint",
            "required": true,
            "type": "string",
            "enum": [
              "network"
            ],
            "x-ms-enum": {
              "name": "DeviceNetworkEnum",
              "modelAsString": true,
              "values": [
                {
                  "name": "network",
                  "value": "network",
                  "description": "Static endpoint"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "$ref": "#/parameters/ApcGatewayIdHeader"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceNetworkIdentifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NetworkRetrievalResult"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApcError"
            }
          }
        },
        "x-ms-examples": {
          "DeviceNetwork_Retrieve": {
            "$ref": "./examples/DeviceNetwork_Retrieve_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/number-verification/{number}:verify": {
      "post": {
        "operationId": "NumberVerification_Verify",
        "description": "Verifies the phone number (MSISDN) associated with a device.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Static endpoint",
            "required": true,
            "type": "string",
            "enum": [
              "number"
            ],
            "x-ms-enum": {
              "name": "NumberVerificationEnum",
              "modelAsString": true,
              "values": [
                {
                  "name": "number",
                  "value": "number",
                  "description": "Static endpoint"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "$ref": "#/parameters/ApcGatewayIdHeader"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NumberVerificationContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NumberVerificationResult"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApcError"
            }
          }
        },
        "x-ms-examples": {
          "NumberVerification_Verify": {
            "$ref": "./examples/NumberInterface_Verify_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/number-verification/{number}:retrieve": {
      "post": {
        "operationId": "NumberVerification_Retrieve",
        "description": "Retrieves the phone number (MSISDN) associated with a device.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "number",
            "in": "path",
            "description": "Static endpoint",
            "required": true,
            "type": "string",
            "enum": [
              "number"
            ],
            "x-ms-enum": {
              "name": "NumberVerificationEnum",
              "modelAsString": true,
              "values": [
                {
                  "name": "number",
                  "value": "number",
                  "description": "Static endpoint"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "$ref": "#/parameters/ApcGatewayIdHeader"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkIdentifier"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/NumberRetrievalResult"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApcError"
            }
          }
        },
        "x-ms-examples": {
          "NumberVerification_Retrieve": {
            "$ref": "./examples/NumberVerification_Retrieve_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/sim-swap/{simSwap}:retrieve": {
      "post": {
        "operationId": "SimSwap_Retrieve",
        "description": "Provides timestamp of latest SIM swap",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "simSwap",
            "in": "path",
            "description": "Static endpoint",
            "required": true,
            "type": "string",
            "enum": [
              "sim-swap"
            ],
            "x-ms-enum": {
              "name": "SimSwapEnum",
              "modelAsString": true,
              "values": [
                {
                  "name": "simSwap",
                  "value": "sim-swap",
                  "description": "Static endpoint"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "$ref": "#/parameters/ApcGatewayIdHeader"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimSwapRetrievalContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SimSwapRetrievalResult"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApcError"
            }
          }
        },
        "x-ms-examples": {
          "SimSwap_Retrieve": {
            "$ref": "./examples/SimSwap_Retrieve_MaximumSet_Gen.json"
          }
        }
      }
    },
    "/sim-swap/{simSwap}:verify": {
      "post": {
        "operationId": "SimSwap_Verify",
        "description": "Verifies if a SIM swap has been performed during a past period (defined in the request with 'maxAgeHours' attribute). Returns 'True' if a SIM swap has occured.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "simSwap",
            "in": "path",
            "description": "Static endpoint",
            "required": true,
            "type": "string",
            "enum": [
              "sim-swap"
            ],
            "x-ms-enum": {
              "name": "SimSwapEnum",
              "modelAsString": true,
              "values": [
                {
                  "name": "simSwap",
                  "value": "sim-swap",
                  "description": "Static endpoint"
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/Azure.Core.ClientRequestIdHeader"
          },
          {
            "$ref": "#/parameters/ApcGatewayIdHeader"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SimSwapVerificationContent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/SimSwapVerificationResult"
            },
            "headers": {
              "x-ms-client-request-id": {
                "type": "string",
                "format": "uuid",
                "description": "An opaque, globally-unique, client-generated string identifier for the request."
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/ApcError"
            }
          }
        },
        "x-ms-examples": {
          "SimSwap_Verify": {
            "$ref": "./examples/SimSwap_Verify_MaximumSet_Gen.json"
          }
        }
      }
    }
  },
  "definitions": {
    "APCVersions": {
      "type": "string",
      "description": "APC Versions",
      "enum": [
        "v2024_01_09_preview"
      ],
      "x-ms-enum": {
        "name": "APCVersions",
        "modelAsString": true,
        "values": [
          {
            "name": "v2024_01_09_preview",
            "value": "v2024_01_09_preview",
            "description": "Version 2024-01-09-preview"
          }
        ]
      }
    },
    "ApcError": {
      "type": "object",
      "description": "A custom error type for APC.",
      "properties": {
        "status": {
          "type": "integer",
          "format": "int32",
          "description": "The numerical error status eg 500, 404"
        },
        "code": {
          "type": "string",
          "description": "The error code"
        },
        "message": {
          "type": "string",
          "description": "The detailed error message."
        },
        "consentUrl": {
          "type": "string",
          "format": "uri",
          "description": "The consent URL in case of a consent failure"
        }
      },
      "required": [
        "status",
        "code",
        "message"
      ]
    },
    "DeviceLocationEndpoint": {
      "type": "object",
      "description": "Static endpoint to access the Device Location API family.",
      "properties": {
        "location": {
          "$ref": "#/definitions/DeviceLocationEnum",
          "description": "Static endpoint",
          "readOnly": true
        }
      },
      "required": [
        "location"
      ]
    },
    "DeviceLocationEnum": {
      "type": "string",
      "description": "Location static endpoint enum",
      "enum": [
        "location"
      ],
      "x-ms-enum": {
        "name": "DeviceLocationEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "location",
            "value": "location",
            "description": "Static endpoint"
          }
        ]
      }
    },
    "DeviceLocationVerificationContent": {
      "type": "object",
      "description": "Request to verify Location",
      "properties": {
        "networkIdentifier": {
          "$ref": "#/definitions/NetworkIdentifier",
          "description": "Network to query for this device, or device information to enable network routing."
        },
        "latitude": {
          "type": "number",
          "format": "float",
          "description": "Latitude of location to be verified",
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "format": "float",
          "description": "Longitude of location to be verified",
          "minimum": -180,
          "maximum": 180
        },
        "accuracy": {
          "type": "integer",
          "format": "int32",
          "description": "Accuracy expected for location verification in kilometers",
          "minimum": 2,
          "maximum": 100
        },
        "locationDevice": {
          "$ref": "#/definitions/LocationDevice",
          "description": "The device to find the location for."
        }
      },
      "required": [
        "networkIdentifier",
        "latitude",
        "longitude",
        "accuracy",
        "locationDevice"
      ]
    },
    "DeviceLocationVerificationResult": {
      "type": "object",
      "description": "Response verifying location",
      "properties": {
        "verificationResult": {
          "type": "boolean",
          "description": "True if the location is in the specified area, False otherwise"
        }
      },
      "required": [
        "verificationResult"
      ]
    },
    "DeviceNetworkEnum": {
      "type": "string",
      "description": "Network static endpoint enum",
      "enum": [
        "network"
      ],
      "x-ms-enum": {
        "name": "DeviceNetworkEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "network",
            "value": "network",
            "description": "Static endpoint"
          }
        ]
      }
    },
    "DeviceNetworkIdentifier": {
      "type": "object",
      "description": "The device for which to find the network.",
      "properties": {
        "identifierType": {
          "type": "string",
          "description": "The type of device identifier given: 'IPv4' or 'IPv6'."
        },
        "deviceIdentifier": {
          "type": "string",
          "description": "The device identifier in a format matching the type above:\n  - IPv4 in dotted-quad format.\n  - IPV6 in IETF 5952 format."
        }
      },
      "required": [
        "identifierType",
        "deviceIdentifier"
      ]
    },
    "DeviceNetworkRetrievalEndpoint": {
      "type": "object",
      "description": "Static endpoint to access the Device Network API family.",
      "properties": {
        "network": {
          "$ref": "#/definitions/DeviceNetworkEnum",
          "description": "Static endpoint",
          "readOnly": true
        }
      },
      "required": [
        "network"
      ]
    },
    "Ipv4Address": {
      "type": "object",
      "description": "IPv4 device indicator",
      "properties": {
        "ipv4": {
          "type": "string",
          "description": "IPv4 address may be specified in form <address/mask> as:\n          - address - an IPv4 number in dotted-quad form 1.2.3.4. Only this exact IP number will match the flow control rule.\n          - address/mask - an IP number as above with a mask width of the form 1.2.3.4/24.\n            In this case, all IP numbers from 1.2.3.0 to 1.2.3.255 will match. The bit width MUST be valid for the IP version."
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "User equipment port."
        }
      },
      "required": [
        "ipv4",
        "port"
      ]
    },
    "Ipv4AddressModel": {
      "type": "object",
      "description": "IPv4 address and port of the device",
      "properties": {
        "ipv4Address": {
          "$ref": "#/definitions/Ipv4Address",
          "description": "The Ipv4 address"
        }
      }
    },
    "Ipv6Address": {
      "type": "object",
      "description": "IPv6 device indicator",
      "properties": {
        "ipv6": {
          "type": "string",
          "description": "IPv6 address, following IETF 5952 format, may be specified in form <address/mask> as:\n          - address - The /128 subnet is optional for single addresses:\n            - 2001:db8:85a3:8d3:1319:8a2e:370:7344\n            - 2001:db8:85a3:8d3:1319:8a2e:370:7344/128\n          - address/mask - an IP v6 number with a mask:\n            - 2001:db8:85a3:8d3::0/64\n            - 2001:db8:85a3:8d3::/64"
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "User equipment port."
        }
      },
      "required": [
        "ipv6",
        "port"
      ]
    },
    "Ipv6AddressModel": {
      "type": "object",
      "description": "IPv4 address and port of the device",
      "properties": {
        "ipv6Address": {
          "$ref": "#/definitions/Ipv6Address",
          "description": "The Ipv6 address"
        }
      }
    },
    "LocationDevice": {
      "type": "object",
      "description": "Device information needed by operator to provide location information. Include exactly one of these properties to identify your device.",
      "properties": {
        "networkAccessIdentifier": {
          "type": "string",
          "description": "External identifier or network access identifier of the device"
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number in E.164 format (starting with country code), and optionally prefixed with '+'",
          "pattern": "^\\+?[0-9]{5,15}$"
        },
        "ipv4Address": {
          "$ref": "#/definitions/Ipv4Address",
          "description": "The Ipv4 address"
        },
        "ipv6Address": {
          "$ref": "#/definitions/Ipv6Address",
          "description": "The Ipv6 address"
        }
      }
    },
    "NetworkAccessIdentifierModel": {
      "type": "object",
      "description": "The network access ID/external ID of the device",
      "properties": {
        "networkAccessIdentifier": {
          "type": "string",
          "description": "External identifier or network access identifier of the device"
        }
      }
    },
    "NetworkIdentifier": {
      "type": "object",
      "description": "Identifier for the network to be queried",
      "properties": {
        "identifierType": {
          "type": "string",
          "description": "The type of identifier for the network. one of: 'IPv4', 'IPv6', 'NetworkCode'"
        },
        "identifier": {
          "type": "string",
          "description": "The network identifier in a format matching the type above:\n  - IPv4 of a device in dotted-quad form 1.2.3.4.\n  - IPv6 of a device in IETF 5952 format.\n  - NetworkCode matching our documentation or an output from /Network:retrieve.\""
        }
      },
      "required": [
        "identifierType",
        "identifier"
      ]
    },
    "NetworkRetrievalResult": {
      "type": "object",
      "description": "The network that the device is on.",
      "properties": {
        "networkCode": {
          "type": "string",
          "description": "The identifier for the network. This can be used as the networkIdentifier for the service APIs.",
          "pattern": "[a-z0-9-]+$"
        }
      },
      "required": [
        "networkCode"
      ]
    },
    "NumberDevice": {
      "type": "object",
      "description": "Device information to verify phone number. Include exactly one form of phone number.",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Phone number in E.164 format (starting with country code), and optionally prefixed with '+'",
          "pattern": "^\\+?[0-9]{5,15}$"
        },
        "hashedPhoneNumber": {
          "type": "string",
          "description": "Hashed phone number. SHA-256 (in hexadecimal representation) of the mobile phone number in **E.164 format (starting with country code)**. Optionally prefixed with '+'."
        }
      }
    },
    "NumberRetrievalResult": {
      "type": "object",
      "description": "Response with number of device",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Phone number in E.164 format (starting with country code), and optionally prefixed with '+'",
          "pattern": "^\\+?[0-9]{5,15}$"
        }
      },
      "required": [
        "phoneNumber"
      ]
    },
    "NumberVerificationContent": {
      "type": "object",
      "description": "Request to verify number of device",
      "properties": {
        "networkIdentifier": {
          "$ref": "#/definitions/NetworkIdentifier",
          "description": "Identifier for the network to query for this device."
        },
        "phoneNumber": {
          "type": "string",
          "description": "Phone number in E.164 format (starting with country code), and optionally prefixed with '+'",
          "pattern": "^\\+?[0-9]{5,15}$"
        },
        "hashedPhoneNumber": {
          "type": "string",
          "description": "Hashed phone number. SHA-256 (in hexadecimal representation) of the mobile phone number in **E.164 format (starting with country code)**. Optionally prefixed with '+'."
        }
      },
      "required": [
        "networkIdentifier"
      ]
    },
    "NumberVerificationEndpoint": {
      "type": "object",
      "description": "Static endpoint to access Number Verification API family",
      "properties": {
        "number": {
          "$ref": "#/definitions/NumberVerificationEnum",
          "description": "Static endpoint",
          "readOnly": true
        }
      },
      "required": [
        "number"
      ]
    },
    "NumberVerificationEnum": {
      "type": "string",
      "description": "Number static endpoint enum",
      "enum": [
        "number"
      ],
      "x-ms-enum": {
        "name": "NumberVerificationEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "number",
            "value": "number",
            "description": "Static endpoint"
          }
        ]
      }
    },
    "NumberVerificationResult": {
      "type": "object",
      "description": "Response verifying number of device",
      "properties": {
        "verificationResult": {
          "type": "boolean",
          "description": "True if number if the phone number matches the device, False otherwise"
        }
      },
      "required": [
        "verificationResult"
      ]
    },
    "PhoneNumberModel": {
      "type": "object",
      "description": "The phone number of the device.",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Phone number in E.164 format (starting with country code), and optionally prefixed with '+'",
          "pattern": "^\\+?[0-9]{5,15}$"
        }
      }
    },
    "SimSwapDevice": {
      "type": "object",
      "description": "Device information needed by operator to find sim swap information.",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Phone number in E.164 format (starting with country code), and optionally prefixed with '+'",
          "pattern": "^\\+?[0-9]{5,15}$"
        }
      }
    },
    "SimSwapEndpoint": {
      "type": "object",
      "description": "Static endpoint to access the Sim Swap API family",
      "properties": {
        "simSwap": {
          "$ref": "#/definitions/SimSwapEnum",
          "description": "Static endpoint",
          "readOnly": true
        }
      },
      "required": [
        "simSwap"
      ]
    },
    "SimSwapEnum": {
      "type": "string",
      "description": "Number static endpoint enum",
      "enum": [
        "sim-swap"
      ],
      "x-ms-enum": {
        "name": "SimSwapEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "simSwap",
            "value": "sim-swap",
            "description": "Static endpoint"
          }
        ]
      }
    },
    "SimSwapRetrievalContent": {
      "type": "object",
      "description": "Request to retrieve SimSwap date",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Phone number in E.164 format (starting with country code), and optionally prefixed with '+'",
          "pattern": "^\\+?[0-9]{5,15}$"
        },
        "networkIdentifier": {
          "$ref": "#/definitions/NetworkIdentifier",
          "description": "Network to query for this device"
        }
      },
      "required": [
        "networkIdentifier"
      ]
    },
    "SimSwapRetrievalResult": {
      "type": "object",
      "description": "Response with SimSwap date",
      "properties": {
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Datetime of most recent swap for SIM"
        }
      },
      "required": [
        "date"
      ]
    },
    "SimSwapVerificationContent": {
      "type": "object",
      "description": "Request to verify SimSwap in period",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Phone number in E.164 format (starting with country code), and optionally prefixed with '+'",
          "pattern": "^\\+?[0-9]{5,15}$"
        },
        "maxAgeHours": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum lookback for SimSwap verification",
          "default": 240,
          "minimum": 1,
          "maximum": 2400
        },
        "networkIdentifier": {
          "$ref": "#/definitions/NetworkIdentifier",
          "description": "Identifier for the network to query for this device."
        }
      },
      "required": [
        "networkIdentifier"
      ]
    },
    "SimSwapVerificationResult": {
      "type": "object",
      "description": "Response verifying SimSwap in period",
      "properties": {
        "verificationResult": {
          "type": "boolean",
          "description": "True if the SIM has swapped in the specified period, False otherwise"
        }
      },
      "required": [
        "verificationResult"
      ]
    }
  },
  "parameters": {
    "ApcGatewayIdHeader": {
      "name": "apc-gateway-id",
      "in": "header",
      "description": "The identifier of the APC Gateway resource which should handle this request.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apcGatewayId"
    },
    "Azure.Core.ClientRequestIdHeader": {
      "name": "x-ms-client-request-id",
      "in": "header",
      "description": "An opaque, globally-unique, client-generated string identifier for the request.",
      "required": false,
      "type": "string",
      "format": "uuid",
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "clientRequestId"
    },
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "description": "The API version to use for this operation.",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method",
      "x-ms-client-name": "apiVersion"
    }
  }
}
